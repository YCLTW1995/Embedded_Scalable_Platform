<?xml version="1.0"?>
<source_file>
    <module>
        <name>cynw::cynw_one_shot</name>
        <id>37</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_comm_util.h</source_path>
        <source_line>1228</source_line>
        <source_column>7</source_column>
        <inline_module/>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
            <clock/>
        </port>
        <port>
            <name>rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst</rtl_port_name>
        </port>
        <port>
            <name>active</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>active</rtl_port_name>
        </port>
        <signal>
            <name>m_trig_req</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_trig_req</rtl_port_name>
        </signal>
        <signal>
            <name>m_prev_trig_req</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_prev_trig_req</rtl_port_name>
        </signal>
        <signal>
            <name>m_next_trig_req</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_next_trig_req</rtl_port_name>
        </signal>
        <signal>
            <name>m_next_trig_req_reg</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_next_trig_req_reg</rtl_port_name>
        </signal>
        <signal>
            <name>m_stalling</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_stalling</rtl_port_name>
        </signal>
    </module>
    <module>
        <name>cynw::Can_put_mod</name>
        <id>718</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_can_put_mod.h</source_path>
        <source_line>43</source_line>
        <source_column>8</source_column>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>can_put</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>can_put</rtl_port_name>
        </port>
    </module>
    <module>
        <name>cynw::Can_get_mod</name>
        <id>746</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_can_get_mod.h</source_path>
        <source_line>43</source_line>
        <source_column>8</source_column>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>can_get</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>can_get</rtl_port_name>
        </port>
    </module>
    <module>
        <name>cynw::Sync_Rcv &lt;cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>774</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_sync_rcv.h</source_path>
        <source_line>48</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>841</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>data_buf</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>841</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_buf_prot</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>set_ready_curr</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_ready_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_ready_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_ready_curr</rtl_port_name>
        </signal>
        <signal>
            <name>ready_flop</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready_flop</rtl_port_name>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::Sync_Rcv &lt;cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>1100</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_sync_rcv.h</source_path>
        <source_line>48</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>1159</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>strb</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_strb</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>data_buf</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>1159</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_data</rtl_port_name>
                </member>
                <member>
                    <name>strb</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_buf_strb</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>set_ready_curr</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_ready_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_ready_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_ready_curr</rtl_port_name>
        </signal>
        <signal>
            <name>ready_flop</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready_flop</rtl_port_name>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::Sync_Rcv &lt;cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>1332</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_sync_rcv.h</source_path>
        <source_line>48</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>1391</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>data_buf</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>1391</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_buf_prot</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>set_ready_curr</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_ready_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_ready_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_ready_curr</rtl_port_name>
        </signal>
        <signal>
            <name>ready_flop</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready_flop</rtl_port_name>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::Sync_Snd &lt;cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>1526</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_sync_snd.h</source_path>
        <source_line>48</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <port>
            <name>valid</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>set_valid_curr</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_curr</rtl_port_name>
        </port>
        <signal>
            <name>set_valid_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_valid_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_valid_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_valid_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_valid_curr</rtl_port_name>
        </signal>
        <signal>
            <name>valid_flop</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid_flop</rtl_port_name>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::axi4_lite::axi4_lite_slave_transactor_imp &lt;cynw::axi4_lite::axi4_lite_traits_template &lt;reg_if_width_traits, true &gt;, cynw::axi4_lite::axi4_lite_traits_template &lt;reg_if_width_traits, true &gt;::tlm_traits, (unsigned int)0, true &gt;</name>
        <id>1567</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_slave_transactor.h</source_path>
        <source_line>36</source_line>
        <source_column>7</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <inline_module/>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
            <clock/>
        </port>
        <port>
            <name>reset</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>reset</rtl_port_name>
        </port>
        <port>
            <name>AWVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWVALID</rtl_port_name>
        </port>
        <port>
            <name>AWADDR</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>AWADDR</rtl_port_name>
        </port>
        <port>
            <name>AWREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWREADY</rtl_port_name>
        </port>
        <port>
            <name>AWPROT</name>
            <direction>in</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>AWPROT</rtl_port_name>
        </port>
        <port>
            <name>WVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WVALID</rtl_port_name>
        </port>
        <port>
            <name>WSTRB</name>
            <direction>in</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>WSTRB</rtl_port_name>
        </port>
        <port>
            <name>WDATA</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>WDATA</rtl_port_name>
        </port>
        <port>
            <name>WREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WREADY</rtl_port_name>
        </port>
        <port>
            <name>BREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BREADY</rtl_port_name>
        </port>
        <port>
            <name>BVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BVALID</rtl_port_name>
        </port>
        <port>
            <name>BRESP</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>BRESP</rtl_port_name>
        </port>
        <port>
            <name>ARVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARVALID</rtl_port_name>
        </port>
        <port>
            <name>ARADDR</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>ARADDR</rtl_port_name>
        </port>
        <port>
            <name>ARREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARREADY</rtl_port_name>
        </port>
        <port>
            <name>ARPROT</name>
            <direction>in</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>ARPROT</rtl_port_name>
        </port>
        <port>
            <name>RREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RREADY</rtl_port_name>
        </port>
        <port>
            <name>RVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RVALID</rtl_port_name>
        </port>
        <port>
            <name>RDATA</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>RDATA</rtl_port_name>
        </port>
        <port>
            <name>RRESP</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>RRESP</rtl_port_name>
        </port>
        <meta_port>
            <name>aw</name>
            <datatype>
                <name>cynw::cynw_get_port_base &lt;cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt;</name>
                <id>2858</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_port_base.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
            <port>
                <name>valid</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>aw_valid</rtl_port_name>
            </port>
            <port>
                <name>data</name>
                <direction>in</direction>
                <datatype>
                    <name>cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                    <id>841</id>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                    <required_file>../src/axi_traits.hpp</required_file>
                    <member>
                        <name>addr</name>
                        <datatype W="32">sc_uint</datatype>
                        <rtl_port_name>aw_data_addr</rtl_port_name>
                    </member>
                    <member>
                        <name>prot</name>
                        <datatype W="3">sc_uint</datatype>
                        <rtl_port_name>aw_data_prot</rtl_port_name>
                    </member>
                </datatype>
            </port>
            <port>
                <name>ready</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>aw_ready</rtl_port_name>
            </port>
        </meta_port>
        <meta_port>
            <name>w</name>
            <datatype>
                <name>cynw::cynw_get_port_base &lt;cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt;</name>
                <id>2949</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_port_base.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
            <port>
                <name>valid</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>w_valid</rtl_port_name>
            </port>
            <port>
                <name>data</name>
                <direction>in</direction>
                <datatype>
                    <name>cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                    <id>1159</id>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                    <required_file>../src/axi_traits.hpp</required_file>
                    <member>
                        <name>data</name>
                        <datatype W="32">sc_uint</datatype>
                        <rtl_port_name>w_data_data</rtl_port_name>
                    </member>
                    <member>
                        <name>strb</name>
                        <datatype W="4">sc_uint</datatype>
                        <rtl_port_name>w_data_strb</rtl_port_name>
                    </member>
                </datatype>
            </port>
            <port>
                <name>ready</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>w_ready</rtl_port_name>
            </port>
        </meta_port>
        <meta_port>
            <name>ar</name>
            <datatype>
                <name>cynw::cynw_get_port_base &lt;cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt;</name>
                <id>3040</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_port_base.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
            <port>
                <name>valid</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>ar_valid</rtl_port_name>
            </port>
            <port>
                <name>data</name>
                <direction>in</direction>
                <datatype>
                    <name>cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                    <id>1391</id>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                    <required_file>../src/axi_traits.hpp</required_file>
                    <member>
                        <name>addr</name>
                        <datatype W="32">sc_uint</datatype>
                        <rtl_port_name>ar_data_addr</rtl_port_name>
                    </member>
                    <member>
                        <name>prot</name>
                        <datatype W="3">sc_uint</datatype>
                        <rtl_port_name>ar_data_prot</rtl_port_name>
                    </member>
                </datatype>
            </port>
            <port>
                <name>ready</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>ar_ready</rtl_port_name>
            </port>
        </meta_port>
        <meta_port>
            <name>r</name>
            <datatype>
                <name>cynw::cynw_put_port_base &lt;cynw::axi4_lite::axi4_lite_rchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt;</name>
                <id>3131</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_port_base.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
            <port>
                <name>valid</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>r_valid</rtl_port_name>
            </port>
            <port>
                <name>data</name>
                <direction>out</direction>
                <datatype>
                    <name>cynw::axi4_lite::axi4_lite_rchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                    <id>2203</id>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                    <required_file>../src/axi_traits.hpp</required_file>
                    <member>
                        <name>data</name>
                        <datatype W="32">sc_uint</datatype>
                        <rtl_port_name>r_data_data</rtl_port_name>
                    </member>
                    <member>
                        <name>resp</name>
                        <datatype W="2">sc_uint</datatype>
                        <rtl_port_name>r_data_resp</rtl_port_name>
                    </member>
                </datatype>
            </port>
            <port>
                <name>ready</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>r_ready</rtl_port_name>
            </port>
        </meta_port>
        <meta_port>
            <name>b</name>
            <datatype>
                <name>cynw::cynw_put_port_base &lt;cynw::axi4_lite::axi4_lite_bchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt;</name>
                <id>3294</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_port_base.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
            <port>
                <name>valid</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>b_valid</rtl_port_name>
            </port>
            <port>
                <name>data</name>
                <direction>out</direction>
                <datatype>
                    <name>cynw::axi4_lite::axi4_lite_bchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                    <id>2282</id>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                    <required_file>../src/axi_traits.hpp</required_file>
                    <member>
                        <name>resp</name>
                        <datatype W="2">sc_uint</datatype>
                        <rtl_port_name>b_data_resp</rtl_port_name>
                    </member>
                </datatype>
            </port>
            <port>
                <name>ready</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>b_ready</rtl_port_name>
            </port>
        </meta_port>
    </module>
    <module>
        <name>cynw::put_get_channel_imp &lt;cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>2336</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>51</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype>
                <name>cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2394</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::put_get_channel_imp &lt;cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>2427</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>51</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype>
                <name>cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2485</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>strb</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_strb</rtl_port_name>
                </member>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::put_get_channel_imp &lt;cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>2518</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>51</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype>
                <name>cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2576</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::put_get_channel_imp &lt;cynw::axi4_lite::axi4_lite_rchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>2609</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>51</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype>
                <name>cynw::axi4_lite::axi4_lite_rchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2692</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::put_get_channel_imp &lt;cynw::axi4_lite::axi4_lite_bchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>2725</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>51</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype>
                <name>cynw::axi4_lite::axi4_lite_bchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2807</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::nb_get_initiator &lt;cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>2839</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_get.h</source_path>
        <source_line>156</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>841</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>data_buf</name>
                        <datatype>
                <name>cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2394</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_buf_prot</rtl_port_name>
                </member>
            </datatype>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_get_initiator_imp &lt;cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>2840</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_get.h</source_path>
        <source_line>56</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>841</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>data_buf</name>
                        <datatype>
                <name>cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2394</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_buf_prot</rtl_port_name>
                </member>
            </datatype>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_get_initiator &lt;cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>2930</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_get.h</source_path>
        <source_line>156</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>1159</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>strb</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_strb</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>data_buf</name>
                        <datatype>
                <name>cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2485</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_data</rtl_port_name>
                </member>
                <member>
                    <name>strb</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_buf_strb</rtl_port_name>
                </member>
            </datatype>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_get_initiator_imp &lt;cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>2931</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_get.h</source_path>
        <source_line>56</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>1159</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>strb</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_strb</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>data_buf</name>
                        <datatype>
                <name>cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2485</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_data</rtl_port_name>
                </member>
                <member>
                    <name>strb</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_buf_strb</rtl_port_name>
                </member>
            </datatype>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_get_initiator &lt;cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>3021</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_get.h</source_path>
        <source_line>156</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>1391</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>data_buf</name>
                        <datatype>
                <name>cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2576</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_buf_prot</rtl_port_name>
                </member>
            </datatype>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_get_initiator_imp &lt;cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>3022</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_get.h</source_path>
        <source_line>56</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>1391</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>data_buf</name>
                        <datatype>
                <name>cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2576</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_addr</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_buf_prot</rtl_port_name>
                </member>
            </datatype>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_put_initiator &lt;cynw::axi4_lite::axi4_lite_rchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>3112</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_put.h</source_path>
        <source_line>150</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_rchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2203</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_valid_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_put_initiator_imp &lt;cynw::axi4_lite::axi4_lite_rchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>3113</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_put.h</source_path>
        <source_line>54</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_rchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2203</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_valid_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_put_initiator &lt;cynw::axi4_lite::axi4_lite_bchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>3275</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_put.h</source_path>
        <source_line>150</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_bchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2282</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_valid_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_put_initiator_imp &lt;cynw::axi4_lite::axi4_lite_bchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>3276</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_put.h</source_path>
        <source_line>54</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_bchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt;</name>
                <id>2282</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_valid_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::Sync_Rcv &lt;cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>3477</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_sync_rcv.h</source_path>
        <source_line>48</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>3536</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>last</name>
                    <datatype W="1">bool</datatype>
                    <rtl_port_name>data_last</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>data_buf</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>3536</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_buf_tid</rtl_port_name>
                </member>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_data</rtl_port_name>
                </member>
                <member>
                    <name>last</name>
                    <datatype W="1">bool</datatype>
                    <rtl_port_name>data_buf_last</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_buf_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>set_ready_curr</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_ready_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_ready_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_ready_curr</rtl_port_name>
        </signal>
        <signal>
            <name>ready_flop</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready_flop</rtl_port_name>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::Sync_Rcv &lt;cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>3751</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_sync_rcv.h</source_path>
        <source_line>48</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>3810</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>data_buf</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>3810</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_buf_tid</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_buf_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>set_ready_curr</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_ready_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_ready_prev</rtl_port_name>
        </signal>
        <signal>
            <name>reset_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>reset_ready_curr</rtl_port_name>
        </signal>
        <signal>
            <name>ready_flop</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready_flop</rtl_port_name>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::axi4::axi4_master_transactor_imp &lt;cynw::axi4::axi4_traits_template &lt;dma_if_width_traits, cynw::axi4::axi4_def_userw_traits, true &gt;, cynw::axi4::axi4_traits_template &lt;dma_if_width_traits, cynw::axi4::axi4_def_userw_traits, true &gt;::tlm_traits, (cynw::axi4::axi_rw_mode)0, true &gt;</name>
        <id>3946</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_master_transactor.h</source_path>
        <source_line>42</source_line>
        <source_column>7</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <inline_module/>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
            <clock/>
        </port>
        <port>
            <name>reset</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>reset</rtl_port_name>
        </port>
        <port>
            <name>AWVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWVALID</rtl_port_name>
        </port>
        <port>
            <name>AWLEN</name>
            <direction>out</direction>
            <datatype W="8">sc_uint</datatype>
            <rtl_port_name>AWLEN</rtl_port_name>
        </port>
        <port>
            <name>AWSIZE</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>AWSIZE</rtl_port_name>
        </port>
        <port>
            <name>AWBURST</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>AWBURST</rtl_port_name>
        </port>
        <port>
            <name>AWID</name>
            <direction>out</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>AWID</rtl_port_name>
        </port>
        <port>
            <name>AWADDR</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>AWADDR</rtl_port_name>
        </port>
        <port>
            <name>AWREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWREADY</rtl_port_name>
        </port>
        <port>
            <name>AWLOCK</name>
            <direction>out</direction>
            <datatype W="1">sc_uint</datatype>
            <rtl_port_name>AWLOCK</rtl_port_name>
        </port>
        <port>
            <name>AWCACHE</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>AWCACHE</rtl_port_name>
        </port>
        <port>
            <name>AWPROT</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>AWPROT</rtl_port_name>
        </port>
        <port>
            <name>AWQOS</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>AWQOS</rtl_port_name>
        </port>
        <port>
            <name>AWREGION</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>AWREGION</rtl_port_name>
        </port>
        <port>
            <name>WVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WVALID</rtl_port_name>
        </port>
        <port>
            <name>WSTRB</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>WSTRB</rtl_port_name>
        </port>
        <port>
            <name>WDATA</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>WDATA</rtl_port_name>
        </port>
        <port>
            <name>WLAST</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WLAST</rtl_port_name>
        </port>
        <port>
            <name>WREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WREADY</rtl_port_name>
        </port>
        <port>
            <name>BREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BREADY</rtl_port_name>
        </port>
        <port>
            <name>BID</name>
            <direction>in</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>BID</rtl_port_name>
        </port>
        <port>
            <name>BVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BVALID</rtl_port_name>
        </port>
        <port>
            <name>BRESP</name>
            <direction>in</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>BRESP</rtl_port_name>
        </port>
        <port>
            <name>ARVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARVALID</rtl_port_name>
        </port>
        <port>
            <name>ARLEN</name>
            <direction>out</direction>
            <datatype W="8">sc_uint</datatype>
            <rtl_port_name>ARLEN</rtl_port_name>
        </port>
        <port>
            <name>ARSIZE</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>ARSIZE</rtl_port_name>
        </port>
        <port>
            <name>ARBURST</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>ARBURST</rtl_port_name>
        </port>
        <port>
            <name>ARID</name>
            <direction>out</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>ARID</rtl_port_name>
        </port>
        <port>
            <name>ARADDR</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>ARADDR</rtl_port_name>
        </port>
        <port>
            <name>ARREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARREADY</rtl_port_name>
        </port>
        <port>
            <name>ARLOCK</name>
            <direction>out</direction>
            <datatype W="1">sc_uint</datatype>
            <rtl_port_name>ARLOCK</rtl_port_name>
        </port>
        <port>
            <name>ARCACHE</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>ARCACHE</rtl_port_name>
        </port>
        <port>
            <name>ARPROT</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>ARPROT</rtl_port_name>
        </port>
        <port>
            <name>ARQOS</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>ARQOS</rtl_port_name>
        </port>
        <port>
            <name>ARREGION</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>ARREGION</rtl_port_name>
        </port>
        <port>
            <name>RREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RREADY</rtl_port_name>
        </port>
        <port>
            <name>RVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RVALID</rtl_port_name>
        </port>
        <port>
            <name>RID</name>
            <direction>in</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>RID</rtl_port_name>
        </port>
        <port>
            <name>RDATA</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>RDATA</rtl_port_name>
        </port>
        <port>
            <name>RRESP</name>
            <direction>in</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>RRESP</rtl_port_name>
        </port>
        <port>
            <name>RLAST</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RLAST</rtl_port_name>
        </port>
        <meta_port>
            <name>aw</name>
            <datatype>
                <name>cynw::cynw_put_port_base &lt;cynw::axi4::axi_awchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;</name>
                <id>5644</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_port_base.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
            <port>
                <name>valid</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>aw_valid</rtl_port_name>
            </port>
            <port>
                <name>data</name>
                <direction>out</direction>
                <datatype>
                    <name>cynw::axi4::axi_awchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                    <id>4863</id>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                    <required_file>../src/axi_traits.hpp</required_file>
                    <member>
                        <name>tid</name>
                        <datatype W="6">sc_uint</datatype>
                        <rtl_port_name>aw_data_tid</rtl_port_name>
                    </member>
                    <member>
                        <name>addr</name>
                        <datatype W="32">sc_uint</datatype>
                        <rtl_port_name>aw_data_addr</rtl_port_name>
                    </member>
                    <member>
                        <name>len</name>
                        <datatype W="8">sc_uint</datatype>
                        <rtl_port_name>aw_data_len</rtl_port_name>
                    </member>
                    <member>
                        <name>burst</name>
                        <datatype W="2">sc_uint</datatype>
                        <rtl_port_name>aw_data_burst</rtl_port_name>
                    </member>
                    <member>
                        <name>size</name>
                        <datatype W="3">sc_uint</datatype>
                        <rtl_port_name>aw_data_size</rtl_port_name>
                    </member>
                    <member>
                        <name>lock</name>
                        <datatype W="1">sc_uint</datatype>
                        <rtl_port_name>aw_data_lock</rtl_port_name>
                    </member>
                    <member>
                        <name>cache</name>
                        <datatype W="4">sc_uint</datatype>
                        <rtl_port_name>aw_data_cache</rtl_port_name>
                    </member>
                    <member>
                        <name>prot</name>
                        <datatype W="3">sc_uint</datatype>
                        <rtl_port_name>aw_data_prot</rtl_port_name>
                    </member>
                    <member>
                        <name>qos</name>
                        <datatype W="4">sc_uint</datatype>
                        <rtl_port_name>aw_data_qos</rtl_port_name>
                    </member>
                    <member>
                        <name>region</name>
                        <datatype W="4">sc_uint</datatype>
                        <rtl_port_name>aw_data_region</rtl_port_name>
                    </member>
                    <member>
                        <name>user</name>
                        <datatype>
                            <name>cynw::no_type</name>
                            <id>3579</id>
                            <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                            <member/>
                        </datatype>
                    </member>
                </datatype>
            </port>
            <port>
                <name>ready</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>aw_ready</rtl_port_name>
            </port>
        </meta_port>
        <meta_port>
            <name>w</name>
            <datatype>
                <name>cynw::cynw_put_port_base &lt;cynw::axi4::axi_wchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;</name>
                <id>5807</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_port_base.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
            <port>
                <name>valid</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>w_valid</rtl_port_name>
            </port>
            <port>
                <name>data</name>
                <direction>out</direction>
                <datatype>
                    <name>cynw::axi4::axi_wchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                    <id>4939</id>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                    <required_file>../src/axi_traits.hpp</required_file>
                    <member>
                        <name>tid</name>
                        <datatype>
                            <name>cynw::no_type</name>
                            <id>3579</id>
                            <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                            <member/>
                        </datatype>
                    </member>
                    <member>
                        <name>data</name>
                        <datatype W="32">sc_uint</datatype>
                        <rtl_port_name>w_data_data</rtl_port_name>
                    </member>
                    <member>
                        <name>strb</name>
                        <datatype W="4">sc_uint</datatype>
                        <rtl_port_name>w_data_strb</rtl_port_name>
                    </member>
                    <member>
                        <name>last</name>
                        <datatype W="1">bool</datatype>
                        <rtl_port_name>w_data_last</rtl_port_name>
                    </member>
                    <member>
                        <name>user</name>
                        <datatype>
                            <name>cynw::no_type</name>
                            <id>3579</id>
                            <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                            <member/>
                        </datatype>
                    </member>
                </datatype>
            </port>
            <port>
                <name>ready</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>w_ready</rtl_port_name>
            </port>
        </meta_port>
        <meta_port>
            <name>ar</name>
            <datatype>
                <name>cynw::cynw_put_port_base &lt;cynw::axi4::axi_archan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;</name>
                <id>5970</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_port_base.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
            <port>
                <name>valid</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>ar_valid</rtl_port_name>
            </port>
            <port>
                <name>data</name>
                <direction>out</direction>
                <datatype>
                    <name>cynw::axi4::axi_archan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                    <id>4901</id>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                    <required_file>../src/axi_traits.hpp</required_file>
                    <member>
                        <name>tid</name>
                        <datatype W="6">sc_uint</datatype>
                        <rtl_port_name>ar_data_tid</rtl_port_name>
                    </member>
                    <member>
                        <name>addr</name>
                        <datatype W="32">sc_uint</datatype>
                        <rtl_port_name>ar_data_addr</rtl_port_name>
                    </member>
                    <member>
                        <name>len</name>
                        <datatype W="8">sc_uint</datatype>
                        <rtl_port_name>ar_data_len</rtl_port_name>
                    </member>
                    <member>
                        <name>burst</name>
                        <datatype W="2">sc_uint</datatype>
                        <rtl_port_name>ar_data_burst</rtl_port_name>
                    </member>
                    <member>
                        <name>size</name>
                        <datatype W="3">sc_uint</datatype>
                        <rtl_port_name>ar_data_size</rtl_port_name>
                    </member>
                    <member>
                        <name>lock</name>
                        <datatype W="1">sc_uint</datatype>
                        <rtl_port_name>ar_data_lock</rtl_port_name>
                    </member>
                    <member>
                        <name>cache</name>
                        <datatype W="4">sc_uint</datatype>
                        <rtl_port_name>ar_data_cache</rtl_port_name>
                    </member>
                    <member>
                        <name>prot</name>
                        <datatype W="3">sc_uint</datatype>
                        <rtl_port_name>ar_data_prot</rtl_port_name>
                    </member>
                    <member>
                        <name>qos</name>
                        <datatype W="4">sc_uint</datatype>
                        <rtl_port_name>ar_data_qos</rtl_port_name>
                    </member>
                    <member>
                        <name>region</name>
                        <datatype W="4">sc_uint</datatype>
                        <rtl_port_name>ar_data_region</rtl_port_name>
                    </member>
                    <member>
                        <name>user</name>
                        <datatype>
                            <name>cynw::no_type</name>
                            <id>3579</id>
                            <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                            <member/>
                        </datatype>
                    </member>
                </datatype>
            </port>
            <port>
                <name>ready</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>ar_ready</rtl_port_name>
            </port>
        </meta_port>
        <meta_port>
            <name>r</name>
            <datatype>
                <name>cynw::cynw_get_port_base &lt;cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;</name>
                <id>6133</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_port_base.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
            <port>
                <name>valid</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>r_valid</rtl_port_name>
            </port>
            <port>
                <name>data</name>
                <direction>in</direction>
                <datatype>
                    <name>cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                    <id>3536</id>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                    <required_file>../src/axi_traits.hpp</required_file>
                    <member>
                        <name>tid</name>
                        <datatype W="6">sc_uint</datatype>
                        <rtl_port_name>r_data_tid</rtl_port_name>
                    </member>
                    <member>
                        <name>data</name>
                        <datatype W="32">sc_uint</datatype>
                        <rtl_port_name>r_data_data</rtl_port_name>
                    </member>
                    <member>
                        <name>last</name>
                        <datatype W="1">bool</datatype>
                        <rtl_port_name>r_data_last</rtl_port_name>
                    </member>
                    <member>
                        <name>resp</name>
                        <datatype W="2">sc_uint</datatype>
                        <rtl_port_name>r_data_resp</rtl_port_name>
                    </member>
                    <member>
                        <name>user</name>
                        <datatype>
                            <name>cynw::no_type</name>
                            <id>3579</id>
                            <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                            <member/>
                        </datatype>
                    </member>
                </datatype>
            </port>
            <port>
                <name>ready</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>r_ready</rtl_port_name>
            </port>
        </meta_port>
        <meta_port>
            <name>b</name>
            <datatype>
                <name>cynw::cynw_get_port_base &lt;cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;</name>
                <id>6224</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_port_base.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
            <port>
                <name>valid</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>b_valid</rtl_port_name>
            </port>
            <port>
                <name>data</name>
                <direction>in</direction>
                <datatype>
                    <name>cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                    <id>3810</id>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                    <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                    <required_file>../src/axi_traits.hpp</required_file>
                    <member>
                        <name>tid</name>
                        <datatype W="6">sc_uint</datatype>
                        <rtl_port_name>b_data_tid</rtl_port_name>
                    </member>
                    <member>
                        <name>resp</name>
                        <datatype W="2">sc_uint</datatype>
                        <rtl_port_name>b_data_resp</rtl_port_name>
                    </member>
                    <member>
                        <name>user</name>
                        <datatype>
                            <name>cynw::no_type</name>
                            <id>3579</id>
                            <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                            <member/>
                        </datatype>
                    </member>
                </datatype>
            </port>
            <port>
                <name>ready</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>b_ready</rtl_port_name>
            </port>
        </meta_port>
    </module>
    <module>
        <name>cynw::put_get_channel_imp &lt;cynw::axi4::axi_awchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>5071</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>51</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype>
                <name>cynw::axi4::axi_awchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>5163</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>len</name>
                    <datatype W="8">sc_uint</datatype>
                    <rtl_port_name>data_len</rtl_port_name>
                </member>
                <member>
                    <name>burst</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_burst</rtl_port_name>
                </member>
                <member>
                    <name>size</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_size</rtl_port_name>
                </member>
                <member>
                    <name>lock</name>
                    <datatype W="1">sc_uint</datatype>
                    <rtl_port_name>data_lock</rtl_port_name>
                </member>
                <member>
                    <name>cache</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_cache</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
                <member>
                    <name>qos</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_qos</rtl_port_name>
                </member>
                <member>
                    <name>region</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_region</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::put_get_channel_imp &lt;cynw::axi4::axi_wchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>5196</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>51</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype>
                <name>cynw::axi4::axi_wchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>5282</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>strb</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_strb</rtl_port_name>
                </member>
                <member>
                    <name>last</name>
                    <datatype W="1">bool</datatype>
                    <rtl_port_name>data_last</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::put_get_channel_imp &lt;cynw::axi4::axi_archan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>5315</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>51</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype>
                <name>cynw::axi4::axi_archan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>5407</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>len</name>
                    <datatype W="8">sc_uint</datatype>
                    <rtl_port_name>data_len</rtl_port_name>
                </member>
                <member>
                    <name>burst</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_burst</rtl_port_name>
                </member>
                <member>
                    <name>size</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_size</rtl_port_name>
                </member>
                <member>
                    <name>lock</name>
                    <datatype W="1">sc_uint</datatype>
                    <rtl_port_name>data_lock</rtl_port_name>
                </member>
                <member>
                    <name>cache</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_cache</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
                <member>
                    <name>qos</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_qos</rtl_port_name>
                </member>
                <member>
                    <name>region</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_region</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::put_get_channel_imp &lt;cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>5440</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>51</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype>
                <name>cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>5501</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>last</name>
                    <datatype W="1">bool</datatype>
                    <rtl_port_name>data_last</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::put_get_channel_imp &lt;cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>5534</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>51</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype>
                <name>cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>5593</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::nb_put_initiator &lt;cynw::axi4::axi_awchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>5625</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_put.h</source_path>
        <source_line>150</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4::axi_awchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>4863</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>len</name>
                    <datatype W="8">sc_uint</datatype>
                    <rtl_port_name>data_len</rtl_port_name>
                </member>
                <member>
                    <name>burst</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_burst</rtl_port_name>
                </member>
                <member>
                    <name>size</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_size</rtl_port_name>
                </member>
                <member>
                    <name>lock</name>
                    <datatype W="1">sc_uint</datatype>
                    <rtl_port_name>data_lock</rtl_port_name>
                </member>
                <member>
                    <name>cache</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_cache</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
                <member>
                    <name>qos</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_qos</rtl_port_name>
                </member>
                <member>
                    <name>region</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_region</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_valid_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_put_initiator_imp &lt;cynw::axi4::axi_awchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>5626</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_put.h</source_path>
        <source_line>54</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4::axi_awchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>4863</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>len</name>
                    <datatype W="8">sc_uint</datatype>
                    <rtl_port_name>data_len</rtl_port_name>
                </member>
                <member>
                    <name>burst</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_burst</rtl_port_name>
                </member>
                <member>
                    <name>size</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_size</rtl_port_name>
                </member>
                <member>
                    <name>lock</name>
                    <datatype W="1">sc_uint</datatype>
                    <rtl_port_name>data_lock</rtl_port_name>
                </member>
                <member>
                    <name>cache</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_cache</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
                <member>
                    <name>qos</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_qos</rtl_port_name>
                </member>
                <member>
                    <name>region</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_region</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_valid_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_put_initiator &lt;cynw::axi4::axi_wchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>5788</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_put.h</source_path>
        <source_line>150</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4::axi_wchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>4939</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>strb</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_strb</rtl_port_name>
                </member>
                <member>
                    <name>last</name>
                    <datatype W="1">bool</datatype>
                    <rtl_port_name>data_last</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_valid_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_put_initiator_imp &lt;cynw::axi4::axi_wchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>5789</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_put.h</source_path>
        <source_line>54</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4::axi_wchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>4939</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>strb</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_strb</rtl_port_name>
                </member>
                <member>
                    <name>last</name>
                    <datatype W="1">bool</datatype>
                    <rtl_port_name>data_last</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_valid_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_put_initiator &lt;cynw::axi4::axi_archan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>5951</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_put.h</source_path>
        <source_line>150</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4::axi_archan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>4901</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>len</name>
                    <datatype W="8">sc_uint</datatype>
                    <rtl_port_name>data_len</rtl_port_name>
                </member>
                <member>
                    <name>burst</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_burst</rtl_port_name>
                </member>
                <member>
                    <name>size</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_size</rtl_port_name>
                </member>
                <member>
                    <name>lock</name>
                    <datatype W="1">sc_uint</datatype>
                    <rtl_port_name>data_lock</rtl_port_name>
                </member>
                <member>
                    <name>cache</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_cache</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
                <member>
                    <name>qos</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_qos</rtl_port_name>
                </member>
                <member>
                    <name>region</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_region</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_valid_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_put_initiator_imp &lt;cynw::axi4::axi_archan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>5952</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_put.h</source_path>
        <source_line>54</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>out</direction>
            <datatype>
                <name>cynw::axi4::axi_archan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>4901</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>addr</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_addr</rtl_port_name>
                </member>
                <member>
                    <name>len</name>
                    <datatype W="8">sc_uint</datatype>
                    <rtl_port_name>data_len</rtl_port_name>
                </member>
                <member>
                    <name>burst</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_burst</rtl_port_name>
                </member>
                <member>
                    <name>size</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_size</rtl_port_name>
                </member>
                <member>
                    <name>lock</name>
                    <datatype W="1">sc_uint</datatype>
                    <rtl_port_name>data_lock</rtl_port_name>
                </member>
                <member>
                    <name>cache</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_cache</rtl_port_name>
                </member>
                <member>
                    <name>prot</name>
                    <datatype W="3">sc_uint</datatype>
                    <rtl_port_name>data_prot</rtl_port_name>
                </member>
                <member>
                    <name>qos</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_qos</rtl_port_name>
                </member>
                <member>
                    <name>region</name>
                    <datatype W="4">sc_uint</datatype>
                    <rtl_port_name>data_region</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_valid_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_valid_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_put_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_put_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_get_initiator &lt;cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>6114</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_get.h</source_path>
        <source_line>156</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>3536</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>last</name>
                    <datatype W="1">bool</datatype>
                    <rtl_port_name>data_last</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>data_buf</name>
                        <datatype>
                <name>cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>5501</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_buf_tid</rtl_port_name>
                </member>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_data</rtl_port_name>
                </member>
                <member>
                    <name>last</name>
                    <datatype W="1">bool</datatype>
                    <rtl_port_name>data_buf_last</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_buf_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_get_initiator_imp &lt;cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>6115</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_get.h</source_path>
        <source_line>56</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>3536</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_data</rtl_port_name>
                </member>
                <member>
                    <name>last</name>
                    <datatype W="1">bool</datatype>
                    <rtl_port_name>data_last</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>data_buf</name>
                        <datatype>
                <name>cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>5501</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_buf_tid</rtl_port_name>
                </member>
                <member>
                    <name>data</name>
                    <datatype W="32">sc_uint</datatype>
                    <rtl_port_name>data_buf_data</rtl_port_name>
                </member>
                <member>
                    <name>last</name>
                    <datatype W="1">bool</datatype>
                    <rtl_port_name>data_buf_last</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_buf_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_get_initiator &lt;cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>6205</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_get.h</source_path>
        <source_line>156</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>3810</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>data_buf</name>
                        <datatype>
                <name>cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>5593</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_buf_tid</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_buf_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>cynw::nb_get_initiator_imp &lt;cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>6206</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_non_blocking_get.h</source_path>
        <source_line>56</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <port>
            <name>valid</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </port>
        <port>
            <name>data</name>
            <direction>in</direction>
            <datatype>
                <name>cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>3810</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_tid</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
        </port>
        <port>
            <name>ready</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </port>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
        </port>
        <signal>
            <name>set_ready_curr</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>set_ready_curr</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>data_buf</name>
                        <datatype>
                <name>cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt;</name>
                <id>5593</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
                <member>
                    <name>tid</name>
                    <datatype W="6">sc_uint</datatype>
                    <rtl_port_name>data_buf_tid</rtl_port_name>
                </member>
                <member>
                    <name>resp</name>
                    <datatype W="2">sc_uint</datatype>
                    <rtl_port_name>data_buf_resp</rtl_port_name>
                </member>
                <member>
                    <name>user</name>
                    <datatype>
                        <name>cynw::no_type</name>
                        <id>3579</id>
                        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/hls_basics/masked_io_types.h</required_file>
                        <member/>
                    </datatype>
                </member>
            </datatype>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig1</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig1</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>nb_can_get_sig2</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>nb_can_get_sig2</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>multi_calls_in_cycle_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>multi_calls_in_cycle_sig</rtl_port_name>
            <private/>
        </signal>
        <port>
            <name>rst_rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst_rst</rtl_port_name>
            <alt_name>rst.rst</alt_name>
        </port>
    </module>
    <module>
        <name>sha</name>
        <id>6333</id>
        <source_path>../src/sha.hpp</source_path>
        <source_line>10</source_line>
        <source_column>7</source_column>
        <port>
            <name>clk</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>clk</rtl_port_name>
            <clock>pos</clock>
        </port>
        <port>
            <name>rst</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>rst</rtl_port_name>
        </port>
        <port>
            <name>irq</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>irq</rtl_port_name>
        </port>
        <meta_port>
            <name>reg_target</name>
            <datatype>
                <name>cynw::axi4_lite::axi4_lite_target_ports_imp &lt;cynw::axi4_lite::axi4_lite_traits_template &lt;reg_if_width_traits, true &gt;::tlm_traits, (unsigned int)0 &gt;</name>
                <id>6672</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_ports.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
            </datatype>
            <port>
                <name>AWVALID</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>reg_target_AWVALID</rtl_port_name>
            </port>
            <port>
                <name>AWADDR</name>
                <direction>in</direction>
                <datatype W="32">sc_uint</datatype>
                <rtl_port_name>reg_target_AWADDR</rtl_port_name>
            </port>
            <port>
                <name>AWREADY</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>reg_target_AWREADY</rtl_port_name>
            </port>
            <port>
                <name>AWPROT</name>
                <direction>in</direction>
                <datatype W="3">sc_uint</datatype>
                <rtl_port_name>reg_target_AWPROT</rtl_port_name>
            </port>
            <port>
                <name>WVALID</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>reg_target_WVALID</rtl_port_name>
            </port>
            <port>
                <name>WSTRB</name>
                <direction>in</direction>
                <datatype W="4">sc_uint</datatype>
                <rtl_port_name>reg_target_WSTRB</rtl_port_name>
            </port>
            <port>
                <name>WDATA</name>
                <direction>in</direction>
                <datatype W="32">sc_uint</datatype>
                <rtl_port_name>reg_target_WDATA</rtl_port_name>
            </port>
            <port>
                <name>WREADY</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>reg_target_WREADY</rtl_port_name>
            </port>
            <port>
                <name>BREADY</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>reg_target_BREADY</rtl_port_name>
            </port>
            <port>
                <name>BVALID</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>reg_target_BVALID</rtl_port_name>
            </port>
            <port>
                <name>BRESP</name>
                <direction>out</direction>
                <datatype W="2">sc_uint</datatype>
                <rtl_port_name>reg_target_BRESP</rtl_port_name>
            </port>
            <port>
                <name>ARVALID</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>reg_target_ARVALID</rtl_port_name>
            </port>
            <port>
                <name>ARADDR</name>
                <direction>in</direction>
                <datatype W="32">sc_uint</datatype>
                <rtl_port_name>reg_target_ARADDR</rtl_port_name>
            </port>
            <port>
                <name>ARREADY</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>reg_target_ARREADY</rtl_port_name>
            </port>
            <port>
                <name>ARPROT</name>
                <direction>in</direction>
                <datatype W="3">sc_uint</datatype>
                <rtl_port_name>reg_target_ARPROT</rtl_port_name>
            </port>
            <port>
                <name>RREADY</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>reg_target_RREADY</rtl_port_name>
            </port>
            <port>
                <name>RVALID</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>reg_target_RVALID</rtl_port_name>
            </port>
            <port>
                <name>RDATA</name>
                <direction>out</direction>
                <datatype W="32">sc_uint</datatype>
                <rtl_port_name>reg_target_RDATA</rtl_port_name>
            </port>
            <port>
                <name>RRESP</name>
                <direction>out</direction>
                <datatype W="2">sc_uint</datatype>
                <rtl_port_name>reg_target_RRESP</rtl_port_name>
            </port>
        </meta_port>
        <meta_port>
            <name>dma_initiator</name>
            <datatype>
                <name>cynw::simple_bus::axi4_initiator_ports_imp &lt;cynw::axi4::axi4_traits_template &lt;dma_if_width_traits, cynw::axi4::axi4_def_userw_traits, true &gt;::tlm_traits, (cynw::axi4::axi_rw_mode)0 &gt;</name>
                <id>7305</id>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_ports.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
            </datatype>
            <port>
                <name>AWVALID</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_AWVALID</rtl_port_name>
            </port>
            <port>
                <name>AWLEN</name>
                <direction>out</direction>
                <datatype W="8">sc_uint</datatype>
                <rtl_port_name>dma_initiator_AWLEN</rtl_port_name>
            </port>
            <port>
                <name>AWSIZE</name>
                <direction>out</direction>
                <datatype W="3">sc_uint</datatype>
                <rtl_port_name>dma_initiator_AWSIZE</rtl_port_name>
            </port>
            <port>
                <name>AWBURST</name>
                <direction>out</direction>
                <datatype W="2">sc_uint</datatype>
                <rtl_port_name>dma_initiator_AWBURST</rtl_port_name>
            </port>
            <port>
                <name>AWID</name>
                <direction>out</direction>
                <datatype W="6">sc_uint</datatype>
                <rtl_port_name>dma_initiator_AWID</rtl_port_name>
            </port>
            <port>
                <name>AWADDR</name>
                <direction>out</direction>
                <datatype W="32">sc_uint</datatype>
                <rtl_port_name>dma_initiator_AWADDR</rtl_port_name>
            </port>
            <port>
                <name>AWREADY</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_AWREADY</rtl_port_name>
            </port>
            <port>
                <name>AWLOCK</name>
                <direction>out</direction>
                <datatype W="1">sc_uint</datatype>
                <rtl_port_name>dma_initiator_AWLOCK</rtl_port_name>
            </port>
            <port>
                <name>AWCACHE</name>
                <direction>out</direction>
                <datatype W="4">sc_uint</datatype>
                <rtl_port_name>dma_initiator_AWCACHE</rtl_port_name>
            </port>
            <port>
                <name>AWPROT</name>
                <direction>out</direction>
                <datatype W="3">sc_uint</datatype>
                <rtl_port_name>dma_initiator_AWPROT</rtl_port_name>
            </port>
            <port>
                <name>AWQOS</name>
                <direction>out</direction>
                <datatype W="4">sc_uint</datatype>
                <rtl_port_name>dma_initiator_AWQOS</rtl_port_name>
            </port>
            <port>
                <name>AWREGION</name>
                <direction>out</direction>
                <datatype W="4">sc_uint</datatype>
                <rtl_port_name>dma_initiator_AWREGION</rtl_port_name>
            </port>
            <port>
                <name>WVALID</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_WVALID</rtl_port_name>
            </port>
            <port>
                <name>WSTRB</name>
                <direction>out</direction>
                <datatype W="4">sc_uint</datatype>
                <rtl_port_name>dma_initiator_WSTRB</rtl_port_name>
            </port>
            <port>
                <name>WDATA</name>
                <direction>out</direction>
                <datatype W="32">sc_uint</datatype>
                <rtl_port_name>dma_initiator_WDATA</rtl_port_name>
            </port>
            <port>
                <name>WLAST</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_WLAST</rtl_port_name>
            </port>
            <port>
                <name>WREADY</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_WREADY</rtl_port_name>
            </port>
            <port>
                <name>BREADY</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_BREADY</rtl_port_name>
            </port>
            <port>
                <name>BID</name>
                <direction>in</direction>
                <datatype W="6">sc_uint</datatype>
                <rtl_port_name>dma_initiator_BID</rtl_port_name>
            </port>
            <port>
                <name>BVALID</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_BVALID</rtl_port_name>
            </port>
            <port>
                <name>BRESP</name>
                <direction>in</direction>
                <datatype W="2">sc_uint</datatype>
                <rtl_port_name>dma_initiator_BRESP</rtl_port_name>
            </port>
            <port>
                <name>ARVALID</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_ARVALID</rtl_port_name>
            </port>
            <port>
                <name>ARLEN</name>
                <direction>out</direction>
                <datatype W="8">sc_uint</datatype>
                <rtl_port_name>dma_initiator_ARLEN</rtl_port_name>
            </port>
            <port>
                <name>ARSIZE</name>
                <direction>out</direction>
                <datatype W="3">sc_uint</datatype>
                <rtl_port_name>dma_initiator_ARSIZE</rtl_port_name>
            </port>
            <port>
                <name>ARBURST</name>
                <direction>out</direction>
                <datatype W="2">sc_uint</datatype>
                <rtl_port_name>dma_initiator_ARBURST</rtl_port_name>
            </port>
            <port>
                <name>ARID</name>
                <direction>out</direction>
                <datatype W="6">sc_uint</datatype>
                <rtl_port_name>dma_initiator_ARID</rtl_port_name>
            </port>
            <port>
                <name>ARADDR</name>
                <direction>out</direction>
                <datatype W="32">sc_uint</datatype>
                <rtl_port_name>dma_initiator_ARADDR</rtl_port_name>
            </port>
            <port>
                <name>ARREADY</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_ARREADY</rtl_port_name>
            </port>
            <port>
                <name>ARLOCK</name>
                <direction>out</direction>
                <datatype W="1">sc_uint</datatype>
                <rtl_port_name>dma_initiator_ARLOCK</rtl_port_name>
            </port>
            <port>
                <name>ARCACHE</name>
                <direction>out</direction>
                <datatype W="4">sc_uint</datatype>
                <rtl_port_name>dma_initiator_ARCACHE</rtl_port_name>
            </port>
            <port>
                <name>ARPROT</name>
                <direction>out</direction>
                <datatype W="3">sc_uint</datatype>
                <rtl_port_name>dma_initiator_ARPROT</rtl_port_name>
            </port>
            <port>
                <name>ARQOS</name>
                <direction>out</direction>
                <datatype W="4">sc_uint</datatype>
                <rtl_port_name>dma_initiator_ARQOS</rtl_port_name>
            </port>
            <port>
                <name>ARREGION</name>
                <direction>out</direction>
                <datatype W="4">sc_uint</datatype>
                <rtl_port_name>dma_initiator_ARREGION</rtl_port_name>
            </port>
            <port>
                <name>RREADY</name>
                <direction>out</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_RREADY</rtl_port_name>
            </port>
            <port>
                <name>RVALID</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_RVALID</rtl_port_name>
            </port>
            <port>
                <name>RID</name>
                <direction>in</direction>
                <datatype W="6">sc_uint</datatype>
                <rtl_port_name>dma_initiator_RID</rtl_port_name>
            </port>
            <port>
                <name>RDATA</name>
                <direction>in</direction>
                <datatype W="32">sc_uint</datatype>
                <rtl_port_name>dma_initiator_RDATA</rtl_port_name>
            </port>
            <port>
                <name>RRESP</name>
                <direction>in</direction>
                <datatype W="2">sc_uint</datatype>
                <rtl_port_name>dma_initiator_RRESP</rtl_port_name>
            </port>
            <port>
                <name>RLAST</name>
                <direction>in</direction>
                <datatype W="1">bool</datatype>
                <rtl_port_name>dma_initiator_RLAST</rtl_port_name>
            </port>
        </meta_port>
        <signal>
            <name>config_ok_sig</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>config_ok_sig</rtl_port_name>
        </signal>
        <signal>
            <name>cmd_sig</name>
                        <datatype W="32">unsigned int</datatype>
            <rtl_port_name>cmd_sig</rtl_port_name>
        </signal>
        <signal>
            <name>status_sig</name>
                        <datatype W="32">unsigned int</datatype>
            <rtl_port_name>status_sig</rtl_port_name>
        </signal>
        <signal>
            <name>in_data_base_addr_sig</name>
                        <datatype W="32">unsigned int</datatype>
            <rtl_port_name>in_data_base_addr_sig</rtl_port_name>
        </signal>
        <ctor_params>
            <param>
                <name>name</name>
                <datatype>
                    <name>sc_core::sc_module_name</name>
                    <id>406</id>
                </datatype>
                <rtl_port_name/>
            </param>
        </ctor_params>
    </module>
    <module>
        <name>cynw::put_get_channel &lt;bool, cynw::SIG_TRAITS_pCLK_nRST &gt;</name>
        <id>6420</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>95</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>data</rtl_port_name>
        </signal>
    </module>
    <module>
        <name>cynw::put_get_channel_imp &lt;bool, cynw::SIG_TRAITS_pCLK_nRST, true &gt;</name>
        <id>6421</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_put_get_channels/cynw_put_get_channel.h</source_path>
        <source_line>51</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_flex_channels_traits.h</required_file>
        <inline_module/>
        <signal>
            <name>ready</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>ready</rtl_port_name>
        </signal>
        <signal>
            <name>valid</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>valid</rtl_port_name>
        </signal>
        <signal>
            <name>data</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>data</rtl_port_name>
        </signal>
    </module>
    <module>
        <name>cynw::axi4_lite::axi4_lite_target &lt;cynw::axi4_lite::axi4_lite_traits_template &lt;reg_if_width_traits, true &gt;, (unsigned int)1 &gt;</name>
        <id>6474</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_initiators_targets.h</source_path>
        <source_line>124</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <inline_module/>
        <sc_port>
            <name>target_port</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw::simple_bus::bus_fw_nb_put_get_if &lt;(int)1, cynw::axi4_lite::axi4_lite_traits_template &lt;reg_if_width_traits, true &gt;::tlm_traits &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>6536</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/simple_bus/simple_bus_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
            </datatype>
        </sc_port>
        <sc_export>
            <name>awchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6570</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>archan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6582</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>wchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6594</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>rchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4_lite::axi4_lite_rchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6606</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>bchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4_lite::axi4_lite_bchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6618</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <port>
            <name>AWVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWVALID</rtl_port_name>
        </port>
        <port>
            <name>AWADDR</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>AWADDR</rtl_port_name>
        </port>
        <port>
            <name>AWREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWREADY</rtl_port_name>
        </port>
        <port>
            <name>AWPROT</name>
            <direction>in</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>AWPROT</rtl_port_name>
        </port>
        <port>
            <name>WVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WVALID</rtl_port_name>
        </port>
        <port>
            <name>WSTRB</name>
            <direction>in</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>WSTRB</rtl_port_name>
        </port>
        <port>
            <name>WDATA</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>WDATA</rtl_port_name>
        </port>
        <port>
            <name>WREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WREADY</rtl_port_name>
        </port>
        <port>
            <name>BREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BREADY</rtl_port_name>
        </port>
        <port>
            <name>BVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BVALID</rtl_port_name>
        </port>
        <port>
            <name>BRESP</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>BRESP</rtl_port_name>
        </port>
        <port>
            <name>ARVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARVALID</rtl_port_name>
        </port>
        <port>
            <name>ARADDR</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>ARADDR</rtl_port_name>
        </port>
        <port>
            <name>ARREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARREADY</rtl_port_name>
        </port>
        <port>
            <name>ARPROT</name>
            <direction>in</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>ARPROT</rtl_port_name>
        </port>
        <port>
            <name>RREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RREADY</rtl_port_name>
        </port>
        <port>
            <name>RVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RVALID</rtl_port_name>
        </port>
        <port>
            <name>RDATA</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>RDATA</rtl_port_name>
        </port>
        <port>
            <name>RRESP</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>RRESP</rtl_port_name>
        </port>
    </module>
    <module>
        <name>cynw::simple_bus::bus_nb_put_get_target_socket &lt;(int)1, cynw::axi4_lite::axi4_lite_traits_template &lt;reg_if_width_traits, true &gt;::tlm_traits &gt;</name>
        <id>6878</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/simple_bus/simple_bus_ifs.h</source_path>
        <source_line>97</source_line>
        <source_column>7</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <inline_module/>
        <sc_port>
            <name>target_port</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw::simple_bus::bus_fw_nb_put_get_if &lt;(int)1, cynw::axi4_lite::axi4_lite_traits_template &lt;reg_if_width_traits, true &gt;::tlm_traits &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>6536</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/simple_bus/simple_bus_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
            </datatype>
        </sc_port>
        <sc_export>
            <name>awchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6570</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>archan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6582</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>wchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6594</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>rchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4_lite::axi4_lite_rchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6606</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>bchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4_lite::axi4_lite_bchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6618</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
    </module>
    <module>
        <name>cynw::axi4_lite::axi4_lite_target_imp &lt;cynw::axi4_lite::axi4_lite_traits_template &lt;reg_if_width_traits, true &gt;, (unsigned int)1, (unsigned int)3 &gt;</name>
        <id>6951</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_initiators_targets.h</source_path>
        <source_line>106</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <inline_module/>
        <sc_port>
            <name>target_port</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw::simple_bus::bus_fw_nb_put_get_if &lt;(int)1, cynw::axi4_lite::axi4_lite_traits_template &lt;reg_if_width_traits, true &gt;::tlm_traits &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>6536</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/simple_bus/simple_bus_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
            </datatype>
        </sc_port>
        <sc_export>
            <name>awchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4_lite::axi4_lite_awchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6570</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>archan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4_lite::axi4_lite_archan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6582</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>wchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4_lite::axi4_lite_wchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6594</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>rchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4_lite::axi4_lite_rchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6606</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <sc_export>
            <name>bchan</name>
            <datatype>
                <name>sc_core::sc_export &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4_lite::axi4_lite_bchan_t &lt;cynw::axi4_lite::axi4_lite_types_traits &lt;reg_if_width_traits &gt; &gt; &gt; &gt;</name>
                <id>6618</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_export.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4_lite/axi4_lite_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_export>
        <port>
            <name>AWVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWVALID</rtl_port_name>
        </port>
        <port>
            <name>AWADDR</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>AWADDR</rtl_port_name>
        </port>
        <port>
            <name>AWREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWREADY</rtl_port_name>
        </port>
        <port>
            <name>AWPROT</name>
            <direction>in</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>AWPROT</rtl_port_name>
        </port>
        <port>
            <name>WVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WVALID</rtl_port_name>
        </port>
        <port>
            <name>WSTRB</name>
            <direction>in</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>WSTRB</rtl_port_name>
        </port>
        <port>
            <name>WDATA</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>WDATA</rtl_port_name>
        </port>
        <port>
            <name>WREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WREADY</rtl_port_name>
        </port>
        <port>
            <name>BREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BREADY</rtl_port_name>
        </port>
        <port>
            <name>BVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BVALID</rtl_port_name>
        </port>
        <port>
            <name>BRESP</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>BRESP</rtl_port_name>
        </port>
        <port>
            <name>ARVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARVALID</rtl_port_name>
        </port>
        <port>
            <name>ARADDR</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>ARADDR</rtl_port_name>
        </port>
        <port>
            <name>ARREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARREADY</rtl_port_name>
        </port>
        <port>
            <name>ARPROT</name>
            <direction>in</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>ARPROT</rtl_port_name>
        </port>
        <port>
            <name>RREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RREADY</rtl_port_name>
        </port>
        <port>
            <name>RVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RVALID</rtl_port_name>
        </port>
        <port>
            <name>RDATA</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>RDATA</rtl_port_name>
        </port>
        <port>
            <name>RRESP</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>RRESP</rtl_port_name>
        </port>
    </module>
    <module>
        <name>cynw::axi4::axi4_initiator &lt;cynw::axi4::axi4_traits_template &lt;dma_if_width_traits, cynw::axi4::axi4_def_userw_traits, true &gt;, (unsigned int)1 &gt;</name>
        <id>7108</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_initiators_targets.h</source_path>
        <source_line>65</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <inline_module/>
        <sc_port>
            <name>awchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4::axi_awchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7128</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>archan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4::axi_archan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7158</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>wchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4::axi_wchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7188</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>rchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7218</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>bchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7248</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <port>
            <name>AWVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWVALID</rtl_port_name>
        </port>
        <port>
            <name>AWLEN</name>
            <direction>out</direction>
            <datatype W="8">sc_uint</datatype>
            <rtl_port_name>AWLEN</rtl_port_name>
        </port>
        <port>
            <name>AWSIZE</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>AWSIZE</rtl_port_name>
        </port>
        <port>
            <name>AWBURST</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>AWBURST</rtl_port_name>
        </port>
        <port>
            <name>AWID</name>
            <direction>out</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>AWID</rtl_port_name>
        </port>
        <port>
            <name>AWADDR</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>AWADDR</rtl_port_name>
        </port>
        <port>
            <name>AWREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWREADY</rtl_port_name>
        </port>
        <port>
            <name>AWLOCK</name>
            <direction>out</direction>
            <datatype W="1">sc_uint</datatype>
            <rtl_port_name>AWLOCK</rtl_port_name>
        </port>
        <port>
            <name>AWCACHE</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>AWCACHE</rtl_port_name>
        </port>
        <port>
            <name>AWPROT</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>AWPROT</rtl_port_name>
        </port>
        <port>
            <name>AWQOS</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>AWQOS</rtl_port_name>
        </port>
        <port>
            <name>AWREGION</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>AWREGION</rtl_port_name>
        </port>
        <port>
            <name>WVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WVALID</rtl_port_name>
        </port>
        <port>
            <name>WSTRB</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>WSTRB</rtl_port_name>
        </port>
        <port>
            <name>WDATA</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>WDATA</rtl_port_name>
        </port>
        <port>
            <name>WLAST</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WLAST</rtl_port_name>
        </port>
        <port>
            <name>WREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WREADY</rtl_port_name>
        </port>
        <port>
            <name>BREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BREADY</rtl_port_name>
        </port>
        <port>
            <name>BID</name>
            <direction>in</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>BID</rtl_port_name>
        </port>
        <port>
            <name>BVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BVALID</rtl_port_name>
        </port>
        <port>
            <name>BRESP</name>
            <direction>in</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>BRESP</rtl_port_name>
        </port>
        <port>
            <name>ARVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARVALID</rtl_port_name>
        </port>
        <port>
            <name>ARLEN</name>
            <direction>out</direction>
            <datatype W="8">sc_uint</datatype>
            <rtl_port_name>ARLEN</rtl_port_name>
        </port>
        <port>
            <name>ARSIZE</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>ARSIZE</rtl_port_name>
        </port>
        <port>
            <name>ARBURST</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>ARBURST</rtl_port_name>
        </port>
        <port>
            <name>ARID</name>
            <direction>out</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>ARID</rtl_port_name>
        </port>
        <port>
            <name>ARADDR</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>ARADDR</rtl_port_name>
        </port>
        <port>
            <name>ARREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARREADY</rtl_port_name>
        </port>
        <port>
            <name>ARLOCK</name>
            <direction>out</direction>
            <datatype W="1">sc_uint</datatype>
            <rtl_port_name>ARLOCK</rtl_port_name>
        </port>
        <port>
            <name>ARCACHE</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>ARCACHE</rtl_port_name>
        </port>
        <port>
            <name>ARPROT</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>ARPROT</rtl_port_name>
        </port>
        <port>
            <name>ARQOS</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>ARQOS</rtl_port_name>
        </port>
        <port>
            <name>ARREGION</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>ARREGION</rtl_port_name>
        </port>
        <port>
            <name>RREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RREADY</rtl_port_name>
        </port>
        <port>
            <name>RVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RVALID</rtl_port_name>
        </port>
        <port>
            <name>RID</name>
            <direction>in</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>RID</rtl_port_name>
        </port>
        <port>
            <name>RDATA</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>RDATA</rtl_port_name>
        </port>
        <port>
            <name>RRESP</name>
            <direction>in</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>RRESP</rtl_port_name>
        </port>
        <port>
            <name>RLAST</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RLAST</rtl_port_name>
        </port>
    </module>
    <module>
        <name>cynw::axi4::axi4_initiator_imp &lt;cynw::axi4::axi4_traits_template &lt;dma_if_width_traits, cynw::axi4::axi4_def_userw_traits, true &gt;, (unsigned int)1, (unsigned int)4 &gt;</name>
        <id>7109</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_initiators_targets.h</source_path>
        <source_line>41</source_line>
        <source_column>8</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <required_file>../src/axi_traits.hpp</required_file>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <inline_module/>
        <sc_port>
            <name>awchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4::axi_awchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7128</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>archan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4::axi_archan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7158</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>wchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4::axi_wchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7188</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>rchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7218</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>bchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7248</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <port>
            <name>AWVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWVALID</rtl_port_name>
        </port>
        <port>
            <name>AWLEN</name>
            <direction>out</direction>
            <datatype W="8">sc_uint</datatype>
            <rtl_port_name>AWLEN</rtl_port_name>
        </port>
        <port>
            <name>AWSIZE</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>AWSIZE</rtl_port_name>
        </port>
        <port>
            <name>AWBURST</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>AWBURST</rtl_port_name>
        </port>
        <port>
            <name>AWID</name>
            <direction>out</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>AWID</rtl_port_name>
        </port>
        <port>
            <name>AWADDR</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>AWADDR</rtl_port_name>
        </port>
        <port>
            <name>AWREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>AWREADY</rtl_port_name>
        </port>
        <port>
            <name>AWLOCK</name>
            <direction>out</direction>
            <datatype W="1">sc_uint</datatype>
            <rtl_port_name>AWLOCK</rtl_port_name>
        </port>
        <port>
            <name>AWCACHE</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>AWCACHE</rtl_port_name>
        </port>
        <port>
            <name>AWPROT</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>AWPROT</rtl_port_name>
        </port>
        <port>
            <name>AWQOS</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>AWQOS</rtl_port_name>
        </port>
        <port>
            <name>AWREGION</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>AWREGION</rtl_port_name>
        </port>
        <port>
            <name>WVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WVALID</rtl_port_name>
        </port>
        <port>
            <name>WSTRB</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>WSTRB</rtl_port_name>
        </port>
        <port>
            <name>WDATA</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>WDATA</rtl_port_name>
        </port>
        <port>
            <name>WLAST</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WLAST</rtl_port_name>
        </port>
        <port>
            <name>WREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>WREADY</rtl_port_name>
        </port>
        <port>
            <name>BREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BREADY</rtl_port_name>
        </port>
        <port>
            <name>BID</name>
            <direction>in</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>BID</rtl_port_name>
        </port>
        <port>
            <name>BVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>BVALID</rtl_port_name>
        </port>
        <port>
            <name>BRESP</name>
            <direction>in</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>BRESP</rtl_port_name>
        </port>
        <port>
            <name>ARVALID</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARVALID</rtl_port_name>
        </port>
        <port>
            <name>ARLEN</name>
            <direction>out</direction>
            <datatype W="8">sc_uint</datatype>
            <rtl_port_name>ARLEN</rtl_port_name>
        </port>
        <port>
            <name>ARSIZE</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>ARSIZE</rtl_port_name>
        </port>
        <port>
            <name>ARBURST</name>
            <direction>out</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>ARBURST</rtl_port_name>
        </port>
        <port>
            <name>ARID</name>
            <direction>out</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>ARID</rtl_port_name>
        </port>
        <port>
            <name>ARADDR</name>
            <direction>out</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>ARADDR</rtl_port_name>
        </port>
        <port>
            <name>ARREADY</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>ARREADY</rtl_port_name>
        </port>
        <port>
            <name>ARLOCK</name>
            <direction>out</direction>
            <datatype W="1">sc_uint</datatype>
            <rtl_port_name>ARLOCK</rtl_port_name>
        </port>
        <port>
            <name>ARCACHE</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>ARCACHE</rtl_port_name>
        </port>
        <port>
            <name>ARPROT</name>
            <direction>out</direction>
            <datatype W="3">sc_uint</datatype>
            <rtl_port_name>ARPROT</rtl_port_name>
        </port>
        <port>
            <name>ARQOS</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>ARQOS</rtl_port_name>
        </port>
        <port>
            <name>ARREGION</name>
            <direction>out</direction>
            <datatype W="4">sc_uint</datatype>
            <rtl_port_name>ARREGION</rtl_port_name>
        </port>
        <port>
            <name>RREADY</name>
            <direction>out</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RREADY</rtl_port_name>
        </port>
        <port>
            <name>RVALID</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RVALID</rtl_port_name>
        </port>
        <port>
            <name>RID</name>
            <direction>in</direction>
            <datatype W="6">sc_uint</datatype>
            <rtl_port_name>RID</rtl_port_name>
        </port>
        <port>
            <name>RDATA</name>
            <direction>in</direction>
            <datatype W="32">sc_uint</datatype>
            <rtl_port_name>RDATA</rtl_port_name>
        </port>
        <port>
            <name>RRESP</name>
            <direction>in</direction>
            <datatype W="2">sc_uint</datatype>
            <rtl_port_name>RRESP</rtl_port_name>
        </port>
        <port>
            <name>RLAST</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>RLAST</rtl_port_name>
        </port>
    </module>
    <module>
        <name>cynw::simple_bus::bus_nb_put_get_initiator_socket &lt;(int)1, cynw::axi4::axi4_traits_template &lt;dma_if_width_traits, cynw::axi4::axi4_def_userw_traits, true &gt;::tlm_traits &gt;</name>
        <id>7110</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/simple_bus/simple_bus_ifs.h</source_path>
        <source_line>296</source_line>
        <source_column>7</source_column>
        <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
        <inline_module/>
        <sc_port>
            <name>awchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4::axi_awchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7128</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>archan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4::axi_archan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7158</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>wchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_put_if &lt;cynw::axi4::axi_wchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7188</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_core_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>rchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4::axi_rchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7218</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
        <sc_port>
            <name>bchan</name>
            <datatype>
                <name>sc_core::sc_port &lt;cynw_tlm::tlm_nonblocking_get_peek_if &lt;cynw::axi4::axi_bchan_t &lt;cynw::axi4::axi4_types_traits &lt;cynw::axi4::axi4_width_traits &lt;cynw::axi4::axi4_width_traits_extended &lt;dma_if_width_traits &gt; &gt; &gt;, cynw::axi4::axi4_user_type_traits &lt;cynw::axi4::axi4_def_userw_traits &gt; &gt; &gt;, (int)1, (sc_core::sc_port_policy)0 &gt;</name>
                <id>7248</id>
                <required_file>/opt/cad/stratus/tools.lnx86/stratus/systemc/2.3/include/sysc/communication/sc_port.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_interfaces/cynw_tlm_peek_ifs.h</required_file>
                <required_file>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi4/axi4_traits.h</required_file>
                <required_file>../src/axi_traits.hpp</required_file>
            </datatype>
        </sc_port>
    </module>
    <module>
        <name>cynw::cynw_sync_in_tlm</name>
        <id>10949</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_comm_util.h</source_path>
        <source_line>2082</source_line>
        <source_column>1</source_column>
        <inline_module/>
        <port>
            <name>m_input</name>
            <direction>in</direction>
            <datatype W="1">bool</datatype>
            <rtl_port_name>m_input</rtl_port_name>
        </port>
    </module>
    <module>
        <name>cynw_tlm::tlm_fifo_1t_control &lt;(int)3 &gt;</name>
        <id>59553</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_fifo_1t/../cynw_tlm_utils/cynw_tlm_fifo_1t_control.h</source_path>
        <source_line>75</source_line>
        <source_column>7</source_column>
        <inline_module/>
        <signal>
            <name>m_r_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
    </module>
    <module>
        <name>cynw_tlm::tlm_fifo_reg_1t &lt;bool, (int)3, false &gt;</name>
        <id>59964</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_fifo_reg_1t/cynw_tlm_fifo_reg_1t.h</source_path>
        <source_line>88</source_line>
        <source_column>7</source_column>
        <inline_module/>
        <signal>
            <name>m_r_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_buf</name>
                        <datatype>
                <array>3</array>
                <datatype W="1">bool</datatype>
                <rtl_port_name>m_buf_[3]</rtl_port_name>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw_tlm::tlm_fifo_1t_control &lt;(int)8 &gt;</name>
        <id>60265</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_fifo_1t/../cynw_tlm_utils/cynw_tlm_fifo_1t_control.h</source_path>
        <source_line>75</source_line>
        <source_column>7</source_column>
        <inline_module/>
        <signal>
            <name>m_r_ind_prev</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_ind_prev</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_ind_prev_nb_can</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_ind_prev_nb_can</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
    </module>
    <module>
        <name>cynw_tlm::tlm_fifo_reg_1t &lt;bool, (int)8, false &gt;</name>
        <id>60671</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_fifo_reg_1t/cynw_tlm_fifo_reg_1t.h</source_path>
        <source_line>88</source_line>
        <source_column>7</source_column>
        <inline_module/>
        <signal>
            <name>m_r_ind_prev</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_ind_prev</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_ind_prev_nb_can</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_ind_prev_nb_can</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_buf</name>
                        <datatype>
                <array>8</array>
                <datatype W="1">bool</datatype>
                <rtl_port_name>m_buf_[8]</rtl_port_name>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw_tlm::tlm_fifo_1t_control &lt;(int)4 &gt;</name>
        <id>60943</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_fifo_1t/../cynw_tlm_utils/cynw_tlm_fifo_1t_control.h</source_path>
        <source_line>75</source_line>
        <source_column>7</source_column>
        <inline_module/>
        <signal>
            <name>m_r_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
    </module>
    <module>
        <name>cynw_tlm::tlm_fifo_reg_1t &lt;bool, (int)4, false &gt;</name>
        <id>61049</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_tlm/cynw_tlm_fifo_reg_1t/cynw_tlm_fifo_reg_1t.h</source_path>
        <source_line>88</source_line>
        <source_column>7</source_column>
        <inline_module/>
        <signal>
            <name>m_r_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_buf</name>
                        <datatype>
                <array>4</array>
                <datatype W="1">bool</datatype>
                <rtl_port_name>m_buf_[4]</rtl_port_name>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::axi3::wrap_tlm_fifo_reg_1t &lt;bool, (int)3 &gt;</name>
        <id>63534</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi3/axi3_master_segmenter.h</source_path>
        <source_line>38</source_line>
        <source_column>7</source_column>
        <inline_module/>
        <signal>
            <name>m_r_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_buf</name>
                        <datatype>
                <array>3</array>
                <datatype W="1">bool</datatype>
                <rtl_port_name>m_buf_[3]</rtl_port_name>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::axi3::wrap_tlm_fifo_reg_1t &lt;bool, (int)8 &gt;</name>
        <id>63744</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi3/axi3_master_segmenter.h</source_path>
        <source_line>38</source_line>
        <source_column>7</source_column>
        <inline_module/>
        <signal>
            <name>m_r_ind_prev</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_ind_prev</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_ind_prev_nb_can</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_ind_prev_nb_can</name>
                        <datatype W="3">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_buf</name>
                        <datatype>
                <array>8</array>
                <datatype W="1">bool</datatype>
                <rtl_port_name>m_buf_[8]</rtl_port_name>
            </datatype>
        </signal>
    </module>
    <module>
        <name>cynw::axi3::wrap_tlm_fifo_reg_1t &lt;bool, (int)4 &gt;</name>
        <id>63954</id>
        <source_path>/opt/cad/stratus/share/stratus/include/cynw_bus_interfaces/axi3/axi3_master_segmenter.h</source_path>
        <source_line>38</source_line>
        <source_column>7</source_column>
        <inline_module/>
        <signal>
            <name>m_r_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_ind_prev</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_top_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_w_clk_prev</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev</rtl_port_name>
        </signal>
        <signal>
            <name>m_r_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_r_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_ind_prev_nb_can</name>
                        <datatype W="2">sc_uint</datatype>
            <rtl_port_name>m_w_ind_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_top_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_top_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_r_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_r_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_w_clk_prev_nb_can</name>
                        <datatype W="1">bool</datatype>
            <rtl_port_name>m_w_clk_prev_nb_can</rtl_port_name>
            <private/>
        </signal>
        <signal>
            <name>m_buf</name>
                        <datatype>
                <array>4</array>
                <datatype W="1">bool</datatype>
                <rtl_port_name>m_buf_[4]</rtl_port_name>
            </datatype>
        </signal>
    </module>
	<exit_status>0</exit_status>
</source_file>
